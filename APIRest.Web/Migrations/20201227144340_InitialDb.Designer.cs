// <auto-generated />
using System;
using APIRest.Web.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIRest.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201227144340_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("APIRest.Web.data.entities.Curso", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("IdCurso");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.Estudiante", b =>
                {
                    b.Property<int>("IdEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("Date");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstudiante");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.InscripcionCurso", b =>
                {
                    b.Property<int>("IdInscripcionCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CursoIdCurso")
                        .HasColumnType("int");

                    b.Property<int?>("EstudianteIdEstudiante")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MatriculaIdMatricula")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodoIdPeriodo")
                        .HasColumnType("int");

                    b.HasKey("IdInscripcionCurso");

                    b.HasIndex("CursoIdCurso");

                    b.HasIndex("EstudianteIdEstudiante");

                    b.HasIndex("MatriculaIdMatricula");

                    b.HasIndex("PeriodoIdPeriodo");

                    b.ToTable("InscripcionCursos");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.Matricula", b =>
                {
                    b.Property<int>("IdMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EstudianteIdEstudiante")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PeriodoIdPeriodo")
                        .HasColumnType("int");

                    b.HasKey("IdMatricula");

                    b.HasIndex("EstudianteIdEstudiante");

                    b.HasIndex("PeriodoIdPeriodo");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.Periodo", b =>
                {
                    b.Property<int>("IdPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Anio")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("IdPeriodo");

                    b.ToTable("Periodos");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.InscripcionCurso", b =>
                {
                    b.HasOne("APIRest.Web.data.entities.Curso", "Curso")
                        .WithMany("InscripcionCursos")
                        .HasForeignKey("CursoIdCurso");

                    b.HasOne("APIRest.Web.data.entities.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("EstudianteIdEstudiante");

                    b.HasOne("APIRest.Web.data.entities.Matricula", null)
                        .WithMany("InscripcionCursos")
                        .HasForeignKey("MatriculaIdMatricula");

                    b.HasOne("APIRest.Web.data.entities.Periodo", "Periodo")
                        .WithMany()
                        .HasForeignKey("PeriodoIdPeriodo");

                    b.Navigation("Curso");

                    b.Navigation("Estudiante");

                    b.Navigation("Periodo");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.Matricula", b =>
                {
                    b.HasOne("APIRest.Web.data.entities.Estudiante", "Estudiante")
                        .WithMany("Matriculas")
                        .HasForeignKey("EstudianteIdEstudiante");

                    b.HasOne("APIRest.Web.data.entities.Periodo", "Periodo")
                        .WithMany("Matriculas")
                        .HasForeignKey("PeriodoIdPeriodo");

                    b.Navigation("Estudiante");

                    b.Navigation("Periodo");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.Curso", b =>
                {
                    b.Navigation("InscripcionCursos");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.Estudiante", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.Matricula", b =>
                {
                    b.Navigation("InscripcionCursos");
                });

            modelBuilder.Entity("APIRest.Web.data.entities.Periodo", b =>
                {
                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
